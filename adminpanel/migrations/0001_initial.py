# Generated by Django 3.1.11 on 2023-09-14 14:11

import adminpanel.manager
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('referral_code', models.CharField(max_length=50, null=True, unique=True)),
                ('referral_reward_status', models.BooleanField(default=False)),
                ('dolls_to_get_count', models.IntegerField(default=0)),
                ('dolls_got_count', models.IntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('user_type', models.CharField(choices=[('CUSTOMER', 'CUSTOMER'), ('SUBADMIN', 'SUB ADMIN')], default='CUSTOMER', max_length=20)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('country_code', models.CharField(blank=True, max_length=30, null=True)),
                ('mobile', models.CharField(blank=True, max_length=255, null=True)),
                ('download_count', models.IntegerField(default=0)),
                ('download_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('profile_img', models.ImageField(null=True, upload_to='profile_image')),
                ('is_mail_send', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('can_comment', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('otp', models.CharField(blank=True, max_length=6, null=True)),
                ('wallet', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', adminpanel.manager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading_1', models.CharField(blank=True, max_length=255, null=True)),
                ('image_1', models.ImageField(blank=True, null=True, upload_to='about_us/image_1/%Y/%m/%d/')),
                ('content_1', models.TextField(null=True)),
                ('heading_2', models.CharField(blank=True, max_length=255, null=True)),
                ('image_2', models.ImageField(blank=True, null=True, upload_to='about_us/image_2/%Y/%m/%d/')),
                ('content_2', models.TextField(null=True)),
                ('heading_3', models.CharField(blank=True, max_length=255, null=True)),
                ('content_3', models.TextField(null=True)),
                ('heading_4', models.CharField(blank=True, max_length=255, null=True)),
                ('image_4', models.ImageField(blank=True, null=True, upload_to='about_us/image_4/%Y/%m/%d/')),
                ('content_4', models.TextField(null=True)),
                ('heading_5', models.CharField(blank=True, max_length=255, null=True)),
                ('content_5', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AnonymousCart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('a_id', models.BigIntegerField()),
                ('shop_product_list', models.CharField(blank=True, max_length=255, null=True)),
                ('last_active_time', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=255)),
                ('image', models.ImageField(upload_to='blog')),
                ('content', models.TextField(blank=True, null=True)),
                ('posted_by', models.CharField(max_length=255)),
                ('video', models.FileField(null=True, upload_to='blog/video')),
                ('other_important_info', models.TextField(blank=True, null=True)),
                ('total_subscriber', models.IntegerField(default=0)),
                ('is_publish', models.BooleanField(default=True)),
                ('is_comment', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_blog_schedule', models.BooleanField(default=False)),
                ('publish_at', models.DateTimeField(blank=True, null=True)),
                ('shop', models.CharField(max_length=255, null=True)),
                ('imagine', models.CharField(max_length=255, null=True)),
                ('slug', models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BlogComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog', to='adminpanel.blog')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BlogContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=255, null=True)),
                ('description', models.TextField(null=True)),
                ('image', models.ImageField(null=True, upload_to='blog_content/%Y/%m/%d/')),
            ],
        ),
        migrations.CreateModel(
            name='BlogSubscriber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('url', models.CharField(max_length=255, null=True, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_delete', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ContactUsDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, null=True)),
                ('mobile', models.CharField(max_length=255, null=True)),
                ('address', models.CharField(max_length=255, null=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('latitude', models.CharField(blank=True, max_length=40, null=True)),
                ('longitude', models.CharField(blank=True, max_length=100, null=True)),
                ('default_address', models.BooleanField(blank=True, default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContactUsInquiry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('subject', models.CharField(max_length=255, null=True)),
                ('inquiry', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('replied', models.BooleanField(default=False)),
                ('reply', models.TextField(null=True)),
                ('replied_at', models.DateTimeField(null=True)),
                ('respondent_name', models.CharField(max_length=255, null=True)),
                ('respondent_email', models.EmailField(max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContectUsContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=255, null=True)),
                ('description', models.TextField(null=True)),
                ('image', models.ImageField(null=True, upload_to='contect_us_content/%Y/%m/%d/')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('heading', models.CharField(max_length=40)),
                ('flag_img', models.ImageField(upload_to='country')),
                ('map_img', models.ImageField(upload_to='country')),
                ('initial_paragraph', models.TextField(blank=True, null=True)),
                ('body_paragraph', models.TextField(blank=True, null=True)),
                ('latitude', models.CharField(blank=True, max_length=40, null=True)),
                ('longitude', models.CharField(blank=True, max_length=40, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='DressType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_title', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_description', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_keyword', models.CharField(blank=True, max_length=255, null=True)),
                ('og_title', models.CharField(blank=True, max_length=255, null=True)),
                ('og_description', models.CharField(blank=True, max_length=255, null=True)),
                ('permalink', models.CharField(blank=True, max_length=255, null=True)),
                ('priority', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('og_img', models.ImageField(null=True, upload_to='dress_type/%Y/%m/%d/')),
                ('url_slug', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.category')),
            ],
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True)),
                ('subject', models.CharField(max_length=255, null=True, unique=True)),
                ('content', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_delete', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Questions', models.TextField(blank=True, null=True)),
                ('Answers', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GiftCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gift_price', models.IntegerField(default=0)),
                ('days', models.IntegerField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GiftCardImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('giftcard_image', models.ImageField(blank=True, null=True, upload_to='gift_card/%Y/%m/%d/')),
            ],
        ),
        migrations.CreateModel(
            name='GiftCardType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('giftcard_type', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='GiftCardTypeImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.ImageField(blank=True, null=True, upload_to='giftcard_type/%Y/%m/%d/')),
                ('giftcard_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.giftcardtype')),
            ],
        ),
        migrations.CreateModel(
            name='GuestUserData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('order_id', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('carrier_code', models.CharField(blank=True, max_length=255, null=True)),
                ('carrier_service_name', models.CharField(blank=True, max_length=255, null=True)),
                ('shipping_charge', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('tax', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('order_status', models.CharField(blank=True, max_length=50, null=True)),
                ('tracking_url', models.TextField(blank=True, null=True)),
                ('order_detail', models.JSONField(null=True)),
                ('shipping_address', models.JSONField(null=True)),
                ('billing_address', models.JSONField(null=True)),
                ('webhook_data', models.JSONField(null=True)),
                ('stripe_payment_data', models.JSONField(null=True)),
                ('order_at', models.DateTimeField(null=True)),
                ('delivered_at', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ImagineProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('alt_text', models.CharField(max_length=255)),
                ('og_title', models.CharField(max_length=255)),
                ('og_description', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('related_product_list', models.CharField(blank=True, max_length=255, null=True)),
                ('slug', models.CharField(blank=True, max_length=255, null=True)),
                ('unique_slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('dress_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='imagine_product_dress_type', to='adminpanel.dresstype')),
            ],
        ),
        migrations.CreateModel(
            name='ImagineProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primary_img', models.ImageField(blank=True, null=True, upload_to='product/imagine/%Y/%m/%d/')),
                ('pdf_img', models.ImageField(blank=True, null=True, upload_to='product/imagine/%Y/%m/%d/')),
                ('og_img', models.ImageField(blank=True, null=True, upload_to='product/imagine/%Y/%m/%d/')),
                ('imagine_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='imagine_product', to='adminpanel.imagineproduct')),
            ],
        ),
        migrations.CreateModel(
            name='Legal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LinksOnBlog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('image', models.ImageField(null=True, upload_to='links_on_blog_image')),
                ('is_active', models.BooleanField(default=True)),
                ('url', models.CharField(max_length=255, null=True, unique=True)),
                ('is_social', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='MessageTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True)),
                ('subject', models.CharField(max_length=255, null=True, unique=True)),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True)),
                ('parent_id', models.CharField(max_length=255, null=True)),
                ('add', models.BooleanField(default=False)),
                ('edit', models.BooleanField(default=False)),
                ('delete', models.BooleanField(default=False)),
                ('view', models.BooleanField(default=False)),
                ('is_child', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('url', models.CharField(max_length=255, null=True)),
                ('icon', models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, null=True)),
                ('percentage', models.FloatField(blank=True, max_length=250, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('subcategory', models.CharField(blank=True, max_length=250, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrderCharge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='privacy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('priority', models.IntegerField(default=0)),
                ('permalink', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('category', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.category')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImagine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('content', models.CharField(blank=True, max_length=250, null=True)),
                ('image', models.ImageField(null=True, upload_to='product_image_type/%Y/%m/%d/')),
            ],
        ),
        migrations.CreateModel(
            name='ProductOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('card_brand', models.CharField(blank=True, max_length=255, null=True)),
                ('carrier_service_name', models.CharField(blank=True, max_length=255, null=True)),
                ('shipping_charge', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('tax', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('paid_by_stripe', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('paid_by_wallet', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('order_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('order_status', models.CharField(blank=True, max_length=50, null=True)),
                ('is_refunded', models.BooleanField(blank=True, default=False, null=True)),
                ('canceled_by', models.CharField(blank=True, max_length=50, null=True)),
                ('canceled_at', models.DateTimeField(null=True)),
                ('delivered_at', models.DateTimeField(null=True)),
                ('listing', models.BooleanField(blank=True, default=True, null=True)),
                ('tracking_url', models.TextField(blank=True, null=True)),
                ('webhook_data', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductShop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('content', models.CharField(blank=True, max_length=250, null=True)),
                ('image', models.ImageField(null=True, upload_to='product_shop_type/%Y/%m/%d/')),
            ],
        ),
        migrations.CreateModel(
            name='ReferralContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='referral/image/%Y/%m/%d/')),
                ('content', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SheroDolls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('claim_to_fame', models.CharField(blank=True, max_length=50, null=True)),
                ('original_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('offer_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('month', models.CharField(blank=True, max_length=50, null=True)),
                ('year', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_publish', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('publish_at', models.DateTimeField(blank=True, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('features', models.TextField(blank=True, null=True)),
                ('slug', models.CharField(blank=True, max_length=50, null=True)),
                ('unique_slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('og_title', models.CharField(blank=True, max_length=255, null=True)),
                ('og_description', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.country')),
            ],
        ),
        migrations.CreateModel(
            name='SheroDollsImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primary_img', models.ImageField(blank=True, null=True, upload_to='shero_dolls/%Y/%m/%d/')),
                ('og_img', models.ImageField(blank=True, null=True, upload_to='shero_dolls/%Y/%m/%d/')),
                ('shero_dolls', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shero_dolls', to='adminpanel.sherodolls')),
            ],
        ),
        migrations.CreateModel(
            name='SheroSubscriptionContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner_image', models.ImageField(blank=True, null=True, upload_to='shero_subscription_content/banner_image/%Y/%m/%d/')),
                ('banner_image_content', models.TextField(null=True)),
                ('intro_paragraph', models.TextField(null=True)),
                ('shero_benefits_title', models.TextField(null=True)),
                ('shero_benefits_image_1', models.ImageField(blank=True, null=True, upload_to='shero_subscription_content/shero_benefits_image_1/%Y/%m/%d/')),
                ('shero_benefits_content_1', models.TextField(null=True)),
                ('shero_benefits_image_2', models.ImageField(blank=True, null=True, upload_to='shero_subscription_content/shero_benefits_image_2/%Y/%m/%d/')),
                ('shero_benefits_content_2', models.TextField(null=True)),
                ('shero_benefits_image_3', models.ImageField(blank=True, null=True, upload_to='shero_subscription_content/shero_benefits_image_3/%Y/%m/%d/')),
                ('shero_benefits_content_3', models.TextField(null=True)),
                ('shero_benefits_image_4', models.ImageField(blank=True, null=True, upload_to='shero_subscription_content/shero_benefits_image_4/%Y/%m/%d/')),
                ('shero_benefits_content_4', models.TextField(null=True)),
                ('shero_benefits_image_5', models.ImageField(blank=True, null=True, upload_to='shero_subscription_content/shero_benefits_image_5/%Y/%m/%d/')),
                ('shero_benefits_content_5', models.TextField(null=True)),
                ('shero_how_it_works_title', models.CharField(blank=True, max_length=255, null=True)),
                ('shero_how_it_works_title_1', models.CharField(blank=True, max_length=255, null=True)),
                ('shero_how_it_works_content_1', models.TextField(null=True)),
                ('shero_how_it_works_image_1', models.ImageField(blank=True, null=True, upload_to='shero_subscription_content/shero_how_it_works_image_1/%Y/%m/%d/')),
                ('shero_how_it_works_title_2', models.CharField(blank=True, max_length=255, null=True)),
                ('shero_how_it_works_content_2', models.TextField(null=True)),
                ('shero_how_it_works_image_2', models.ImageField(blank=True, null=True, upload_to='shero_subscription_content/shero_how_it_works_image_2/%Y/%m/%d/')),
                ('shero_how_it_works_title_3', models.CharField(blank=True, max_length=255, null=True)),
                ('shero_how_it_works_content_3', models.TextField(null=True)),
                ('shero_how_it_works_image_3', models.ImageField(blank=True, null=True, upload_to='shero_subscription_content/shero_how_it_works_image_3/%Y/%m/%d/')),
                ('shero_how_it_works_title_4', models.CharField(blank=True, max_length=255, null=True)),
                ('shero_how_it_works_content_4', models.TextField(null=True)),
                ('shero_how_it_works_image_4', models.ImageField(blank=True, null=True, upload_to='shero_subscription_content/shero_how_it_works_image_4/%Y/%m/%d/')),
                ('create_play_image', models.ImageField(blank=True, null=True, upload_to='shero_subscription_content/create_play_image/%Y/%m/%d/')),
                ('invite_your_friend_image', models.ImageField(blank=True, null=True, upload_to='shero_subscription_content/invite_your_friend_image/%Y/%m/%d/')),
            ],
        ),
        migrations.CreateModel(
            name='Shipping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ShippingPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('order_value_from', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('order_value_upto', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShopProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(blank=True, max_length=50, null=True)),
                ('unique_slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('alt_text', models.CharField(max_length=255)),
                ('og_title', models.CharField(max_length=255)),
                ('og_description', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('original_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('offer_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('weight', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('available_quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('color', models.CharField(blank=True, max_length=255, null=True)),
                ('size', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('description_title', models.CharField(blank=True, max_length=255, null=True)),
                ('country_title', models.CharField(blank=True, max_length=255, null=True)),
                ('product_country_title', models.CharField(blank=True, max_length=255, null=True)),
                ('sku', models.CharField(blank=True, max_length=50, unique=True)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.country')),
                ('product_collection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_product_product_collection', to='adminpanel.productcollection')),
            ],
        ),
        migrations.CreateModel(
            name='ShopProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primary_img', models.ImageField(blank=True, null=True, upload_to='product/%Y/%m/%d/')),
                ('og_img', models.ImageField(blank=True, null=True, upload_to='product/%Y/%m/%d/')),
                ('shop_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shop_product', to='adminpanel.shopproduct')),
            ],
        ),
        migrations.CreateModel(
            name='Slider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('content', models.CharField(blank=True, max_length=250, null=True)),
                ('image', models.ImageField(null=True, upload_to='slider_type/%Y/%m/%d/')),
            ],
        ),
        migrations.CreateModel(
            name='SloperBillingAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=255, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SloperElement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='sloper/element/%Y/%m/%d/')),
                ('status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SloperHospital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('management_name', models.CharField(max_length=255, null=True)),
                ('management_email', models.EmailField(max_length=254, null=True)),
                ('street', models.CharField(max_length=255, null=True)),
                ('city', models.CharField(max_length=255, null=True)),
                ('state', models.CharField(max_length=255, null=True)),
                ('country', models.CharField(max_length=255, null=True)),
                ('zipcode', models.CharField(max_length=255, null=True)),
                ('phone_number', models.CharField(max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SloperLandingPageBannerImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('banner_img', models.ImageField(blank=True, null=True, upload_to='sloper_landing_page/banner_images/%Y/%m/%d/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SloperLandingPageHowItWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SloperLandingPageHowItWorkSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('img', models.ImageField(blank=True, null=True, upload_to='sloper_landing_page/how_it_work_section_images/%Y/%m/%d/')),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SloperLandingPageTestimonial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('rating', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True)),
                ('review_count', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SloperLandingPageTestimonialSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('img', models.ImageField(blank=True, null=True, upload_to='sloper_landing_page/testimonial_images/%Y/%m/%d/')),
                ('rating', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SloperMulticolorIconSVG',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='sloper/svg/%Y/%m/%d/')),
                ('status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SloperPlanCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('category_title', models.CharField(max_length=55, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SloperSchool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('management_name', models.CharField(max_length=255, null=True)),
                ('management_email', models.EmailField(max_length=254, null=True)),
                ('street', models.CharField(max_length=255, null=True)),
                ('city', models.CharField(max_length=255, null=True)),
                ('state', models.CharField(max_length=255, null=True)),
                ('country', models.CharField(max_length=255, null=True)),
                ('zipcode', models.CharField(max_length=255, null=True)),
                ('phone_number', models.CharField(max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SloperStripeData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('stripe_product_id', models.CharField(blank=True, max_length=255, null=True)),
                ('stripe_price_id', models.CharField(blank=True, max_length=255, null=True)),
                ('reciept_url', models.CharField(blank=True, max_length=255, null=True)),
                ('subscription_id', models.CharField(blank=True, max_length=255, null=True)),
                ('schedule_subscription_id', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('stripe_data', models.JSONField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SloperTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='sloper/template/%Y/%m/%d/')),
                ('status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SloperTexture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='sloper/texture/%Y/%m/%d/')),
                ('status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SocialMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('icon', models.ImageField(null=True, upload_to='social_media')),
                ('link', models.CharField(max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_delete', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('content', models.CharField(blank=True, max_length=250, null=True)),
                ('image', models.ImageField(null=True, upload_to='subscription_type/%Y/%m/%d/')),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_type', models.CharField(blank=True, max_length=50, null=True)),
                ('original_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('offer_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('subscription_price_id', models.CharField(blank=True, max_length=255, null=True)),
                ('plan_id', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('sort_order', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionPlanBenefits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='TermsCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TokenAndSecretKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('key', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserAndOrderBackup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile', models.CharField(blank=True, max_length=255, null=True)),
                ('order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('product_name', models.CharField(blank=True, max_length=255, null=True)),
                ('order_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('quantity', models.IntegerField(default=0)),
                ('per_unit_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='WebCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(blank=True, max_length=3, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('phonecode', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.imagineproduct')),
                ('shop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.shopproduct')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WebState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.webcountry')),
            ],
        ),
        migrations.CreateModel(
            name='WebCity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.webstate')),
            ],
        ),
        migrations.CreateModel(
            name='WalletTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('remaining_wallet_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('amount_status', models.CharField(choices=[('DEPOSIT', 'DEPOSIT'), ('WITHDRAW', 'WITHDRAW')], default='DEPOSIT', max_length=255, null=True)),
                ('transaction_type', models.CharField(choices=[('GIFTCARD', 'GIFTCARD'), ('PAYMENT', 'PAYMENT')], default='GIFTCARD', max_length=255, null=True)),
                ('transaction_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserSubscriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('subscription_id', models.CharField(blank=True, max_length=255, null=True)),
                ('start_at', models.DateField(blank=True, null=True)),
                ('expire_at', models.DateField(blank=True, null=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('shero_subscription', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='adminpanel.subscriptionplan')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserSubscriberHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_type', models.CharField(blank=True, max_length=255, null=True)),
                ('subscription_id', models.CharField(blank=True, max_length=255, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('start_at', models.DateField(blank=True, null=True)),
                ('expire_at', models.DateField(blank=True, null=True)),
                ('status', models.BooleanField(default=False)),
                ('canceled', models.BooleanField(default=False)),
                ('canceled_at', models.DateField(blank=True, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserSloperSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('category', models.CharField(max_length=255, null=True)),
                ('plan_detail', models.JSONField(blank=True, null=True)),
                ('is_recurring', models.BooleanField(default=True)),
                ('purchased_at', models.DateTimeField(auto_now_add=True)),
                ('start_at', models.DateTimeField(null=True)),
                ('end_at', models.DateTimeField(null=True)),
                ('is_ended', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_canceled', models.BooleanField(default=False)),
                ('canceled_at', models.DateTimeField(null=True)),
                ('is_gifted', models.BooleanField(default=True)),
                ('billing_address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.sloperbillingaddress')),
                ('sloper_stripe_data', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.sloperstripedata')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserSchoolPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('price_per_student', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('price_per_teacher', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('no_of_student', models.IntegerField(blank=True, null=True)),
                ('no_of_teacher', models.IntegerField(blank=True, null=True)),
                ('user_count_details', models.JSONField(blank=True, null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.sloperplancategory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('role', models.CharField(max_length=50, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserReferral',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_status', models.BooleanField(default=False)),
                ('is_delete', models.BooleanField(default=False)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.productorder')),
                ('user_from', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_from', to=settings.AUTH_USER_MODEL)),
                ('user_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_to', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserGiftSloperPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('user_detail', models.JSONField(blank=True, null=True)),
                ('receiver_email', models.EmailField(max_length=254, null=True)),
                ('is_wasted', models.BooleanField(default=False)),
                ('sender_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user_sloper_subscription', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.userslopersubscription')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserGiftCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receiver_email', models.CharField(max_length=255, null=True)),
                ('sender_email', models.CharField(max_length=255, null=True)),
                ('receiver_name', models.CharField(max_length=255, null=True)),
                ('gift_code', models.CharField(max_length=255, null=True, unique=True)),
                ('title', models.CharField(max_length=255, null=True)),
                ('user_message', models.TextField(null=True)),
                ('gift_card_type', models.CharField(choices=[('GIFT_CARD', 'GIFT_CARD'), ('SHERO_SUBSCRIPTION_GIFT_CARD', 'SHERO_SUBSCRIPTION_GIFT_CARD')], default='GIFT_CARD', max_length=255, null=True)),
                ('is_used', models.BooleanField(default=False)),
                ('is_paid', models.BooleanField(default=False)),
                ('payment_intent_id', models.CharField(max_length=255, null=True)),
                ('stripe_charge_id', models.CharField(max_length=255, null=True)),
                ('balance_transaction', models.CharField(max_length=255, null=True)),
                ('amount', models.CharField(max_length=255, null=True)),
                ('payment_method', models.CharField(max_length=255, null=True)),
                ('reciept_url', models.CharField(max_length=255, null=True)),
                ('status', models.CharField(max_length=255, null=True)),
                ('payment_intent', models.CharField(max_length=255, null=True)),
                ('payment_method_types', models.CharField(max_length=255, null=True)),
                ('customer', models.CharField(max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('expire_at', models.DateTimeField(blank=True, null=True)),
                ('gift_card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.giftcard')),
                ('giftcard_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.giftcardtypeimages')),
                ('subscription_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.subscriptionplan')),
            ],
        ),
        migrations.CreateModel(
            name='UserCart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_product_list', models.CharField(blank=True, max_length=255, null=True)),
                ('shero_dolls_list', models.CharField(blank=True, max_length=255, null=True)),
                ('offer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.offer')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('web_city', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('house_num', models.CharField(blank=True, max_length=255, null=True)),
                ('area_name', models.CharField(blank=True, max_length=255, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=255, null=True)),
                ('default_address', models.BooleanField(blank=True, default=False, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('web_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.webcountry')),
                ('web_state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.webstate')),
            ],
        ),
        migrations.CreateModel(
            name='UsedOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_used', models.BooleanField(default=False)),
                ('offer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.offer')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TransactionGiftCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_transaction', models.IntegerField(choices=[('GIFT_CARD', 'GIFT_CARD'), ('SHERO_SUBSCRIPTION_GIFT_CARD', 'SHERO_SUBSCRIPTION_GIFT_CARD')], default='GIFT_CARD')),
                ('order', models.IntegerField(blank=True, null=True)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('less_price', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('add_price', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('gift_card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.usergiftcard')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionPlanAndBenefits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('benefit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.subscriptionplanbenefits')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.subscriptionplan')),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('heading', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_title', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_description', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_keyword', models.CharField(blank=True, max_length=255, null=True)),
                ('og_title', models.CharField(blank=True, max_length=255, null=True)),
                ('og_description', models.CharField(blank=True, max_length=255, null=True)),
                ('permalink', models.CharField(blank=True, max_length=255, null=True)),
                ('priority', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('banner_img', models.ImageField(null=True, upload_to='sub_category/%Y/%m/%d/')),
                ('og_img', models.ImageField(null=True, upload_to='sub_category/%Y/%m/%d/')),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.category')),
            ],
        ),
        migrations.CreateModel(
            name='SloperUserFolder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('folder_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_trash', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SloperUserDesign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('data', models.JSONField(blank=True, null=True)),
                ('file_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_trash', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('folder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.sloperuserfolder')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SloperPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('from_user', models.IntegerField(default=1)),
                ('upto_user', models.IntegerField(default=1)),
                ('data', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.sloperplancategory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SloperBasicPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.sloperplancategory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShopProductImageSubTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.ImageField(blank=True, null=True, upload_to='product/%Y/%m/%d/')),
                ('shop_product_image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.shopproductimage')),
            ],
        ),
        migrations.AddField(
            model_name='shopproduct',
            name='subcategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_product_subcategory', to='adminpanel.subcategory'),
        ),
        migrations.CreateModel(
            name='SheroDollsImageSubTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.ImageField(blank=True, null=True, upload_to='shero_dolls/%Y/%m/%d/')),
                ('shero_dolls_image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.sherodollsimage')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_review', models.CharField(blank=True, max_length=250, null=True)),
                ('rating', models.FloatField(blank=True, max_length=250, null=True)),
                ('shopproduct', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.shopproduct')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RecentlyVisitedItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visited_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.shopproduct')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductOrderData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('per_unit_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('product_order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.productorder')),
                ('shop_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.shopproduct')),
            ],
        ),
        migrations.AddField(
            model_name='productorder',
            name='billing_address',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='billing', to='adminpanel.useraddress'),
        ),
        migrations.AddField(
            model_name='productorder',
            name='offer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='offer', to='adminpanel.offer'),
        ),
        migrations.AddField(
            model_name='productorder',
            name='shipping_address',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shipping', to='adminpanel.useraddress'),
        ),
        migrations.AddField(
            model_name='productorder',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ProductColor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('detail_description', models.TextField(blank=True, max_length=255, null=True)),
                ('meta_title', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_description', models.TextField(blank=True, max_length=255, null=True)),
                ('meta_keyword', models.CharField(blank=True, max_length=255, null=True)),
                ('og_title', models.CharField(blank=True, max_length=255, null=True)),
                ('og_description', models.TextField(blank=True, max_length=255, null=True)),
                ('text_color', models.CharField(blank=True, max_length=255, null=True)),
                ('image_color_code', models.CharField(blank=True, max_length=255, null=True)),
                ('permalink', models.CharField(blank=True, max_length=255, null=True)),
                ('priority', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('thumbnail_img', models.ImageField(null=True, upload_to='product_color/%Y/%m/%d/')),
                ('banner_img', models.ImageField(null=True, upload_to='product_color/%Y/%m/%d/')),
                ('og_img', models.ImageField(null=True, upload_to='product_color/%Y/%m/%d/')),
                ('url_slug', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.category')),
            ],
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_charge_id', models.CharField(blank=True, max_length=255, null=True)),
                ('balance_transaction', models.CharField(blank=True, max_length=255, null=True)),
                ('amount', models.IntegerField(verbose_name='Amount')),
                ('payment_method', models.CharField(blank=True, max_length=255, null=True)),
                ('reciept_url', models.CharField(blank=True, max_length=255, null=True)),
                ('has_paid', models.BooleanField(default=False, verbose_name='Payment Status')),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_intent', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_method_types', models.CharField(blank=True, max_length=255, null=True)),
                ('customer', models.CharField(blank=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('product_order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.productorder')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender', models.EmailField(blank=True, max_length=254, null=True)),
                ('receiver', models.EmailField(blank=True, max_length=254, null=True)),
                ('recevied_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('message', models.CharField(blank=True, max_length=255, null=True)),
                ('notification_type', models.CharField(blank=True, choices=[('REFERRER', 'REFERRER'), ('INQUIRY', 'INQUIRY')], max_length=255, null=True)),
                ('referrer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Newsletters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=255)),
                ('msg', models.CharField(blank=True, max_length=500, null=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ModulePermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add', models.BooleanField(default=False, null=True)),
                ('edit', models.BooleanField(default=False, null=True)),
                ('delete', models.BooleanField(default=False, null=True)),
                ('view', models.BooleanField(default=False, null=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.module')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ImagineProductImageSubTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.ImageField(blank=True, null=True, upload_to='product/%Y/%m/%d/')),
                ('imagine_product_image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.imagineproductimage')),
            ],
        ),
        migrations.AddField(
            model_name='imagineproduct',
            name='product_color',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='imagine_product_product_color', to='adminpanel.productcolor'),
        ),
        migrations.AddField(
            model_name='imagineproduct',
            name='subcategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imagine_product_subcategory', to='adminpanel.subcategory'),
        ),
        migrations.CreateModel(
            name='HospitalUnregisteredPatients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('phone_number', models.CharField(max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('hospital', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.sloperhospital')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HospitalRegisteredPatients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('has_subscription', models.BooleanField(default=False)),
                ('received_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('hospital', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.sloperhospital')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.imagineproduct')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BlogUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blog', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.blog')),
                ('comment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.blogcomment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BlogSubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.blogcategory')),
            ],
        ),
        migrations.AddField(
            model_name='blog',
            name='blog_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.blogcategory'),
        ),
        migrations.AddField(
            model_name='blog',
            name='sub_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.blogsubcategory'),
        ),
        migrations.CreateModel(
            name='AnonymousWishlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('a_id', models.BigIntegerField()),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.shopproduct')),
            ],
        ),
        migrations.CreateModel(
            name='AnonymousFavorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('a_id', models.BigIntegerField()),
                ('imagine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.imagineproduct')),
            ],
        ),
    ]
